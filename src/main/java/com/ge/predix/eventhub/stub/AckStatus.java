// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EventHub.proto

package com.ge.predix.eventhub.stub;

/**
 * Protobuf enum {@code predix.eventhub.AckStatus}
 */
public enum AckStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ACCEPTED = 0;</code>
   */
  ACCEPTED(0, 0),
  /**
   * <code>BAD_REQUEST = 1;</code>
   */
  BAD_REQUEST(1, 1),
  /**
   * <code>REQUEST_TOO_LARGE = 2;</code>
   */
  REQUEST_TOO_LARGE(2, 2),
  /**
   * <code>FAILED = 3;</code>
   */
  FAILED(3, 3),
  UNRECOGNIZED(-1, -1),
  ;

  /**
   * <code>ACCEPTED = 0;</code>
   */
  public static final int ACCEPTED_VALUE = 0;
  /**
   * <code>BAD_REQUEST = 1;</code>
   */
  public static final int BAD_REQUEST_VALUE = 1;
  /**
   * <code>REQUEST_TOO_LARGE = 2;</code>
   */
  public static final int REQUEST_TOO_LARGE_VALUE = 2;
  /**
   * <code>FAILED = 3;</code>
   */
  public static final int FAILED_VALUE = 3;


  public final int getNumber() {
    if (index == -1) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  public static AckStatus valueOf(int value) {
    switch (value) {
      case 0: return ACCEPTED;
      case 1: return BAD_REQUEST;
      case 2: return REQUEST_TOO_LARGE;
      case 3: return FAILED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AckStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AckStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AckStatus>() {
          public AckStatus findValueByNumber(int number) {
            return AckStatus.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.ge.predix.eventhub.stub.EventHubService.getDescriptor()
        .getEnumTypes().get(0);
  }

  private static final AckStatus[] VALUES = values();

  public static AckStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private AckStatus(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:predix.eventhub.AckStatus)
}

